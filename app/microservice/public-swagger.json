{
  "swagger": "2.0",
  "info": {
    "title": "GeoStore API",
    "description": "GeoStore API",
    "version": "1.0.0"
  },
  "host": "example.vizzuality.com",
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/vnd.api+json"
  ],
  "paths": {
    "/geostore/{id}": {
      "get": {
        "summary": "Get geostore by id",
        "description": "Returns geostore based on a single ID, if the geostore not exist return 404\n### Example URL request\n```\n{{host}}/geostore/ca38fa80a4ffa9ac6217a7e0bf71e6df\n```\n### Example response\n* Saving a geojson\n```json\n{\n      \"data\": {\n          \"type\": \"geoStore\",\n          \"id\": \"ca38fa80a4ffa9ac6217a7e0bf71e6df\",\n          \"attributes\": {\n              \"geojson\": {\n                  \"features\": [{\n                      \"type\": \"Feature\",\n                      \"geometry\": {\n                          \"type\": \"Polygon\",\n                          \"coordinates\": [\n                              [\n                                  [-5.273512601852417,\n                                      42.81137220349083\n                                  ],\n                                  [-5.273512601852417,\n                                      42.811803118457306\n                                  ],\n                                  [-5.272732079029083,\n                                      42.811803118457306\n                                  ],\n                                  [-5.272732079029083,\n                                      42.81137220349083\n                                  ],\n                                  [-5.273512601852417,\n                                      42.81137220349083\n                                  ]\n                              ]\n                          ]\n                      }\n                  }],\n                  \"crs\": {},\n                  \"type\": \"FeatureCollection\"\n              },\n              \"hash\": \"ca38fa80a4ffa9ac6217a7e0bf71e6df\",\n              \"provider\": {},\n              \"areaHa\": 0.3057556230214663\n          }\n      }\n  }\n```\n",
        "operationId": "getGeoStoreById",
        "produces": [
          "application/vnd.api+json"
        ],
        "tags": [
          "GEOSTORE"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of geostore to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Geostore obtained",
            "schema": {
              "$ref": "#/definitions/GeoStoreAPI"
            }
          },
          "404": {
            "description": "Geostore not found",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/geostore": {
      "post": {
        "summary": "Create geostore",
        "description": "### 2 posibilities to create geostore\n\n* Send geojson in a body (geojson attribute)\n* Send provider object with all params. With this mode, the geostore obtain the geojson in the provider. Support providers-> carto\n\n### Example response\n* Saving a geojson\n```json\n{\n      \"data\": {\n          \"type\": \"geoStore\",\n          \"id\": \"ca38fa80a4ffa9ac6217a7e0bf71e6df\",\n          \"attributes\": {\n              \"geojson\": {\n                  \"features\": [{\n                      \"type\": \"Feature\",\n                      \"geometry\": {\n                          \"type\": \"Polygon\",\n                          \"coordinates\": [\n                              [\n                                  [-5.273512601852417,\n                                      42.81137220349083\n                                  ],\n                                  [-5.273512601852417,\n                                      42.811803118457306\n                                  ],\n                                  [-5.272732079029083,\n                                      42.811803118457306\n                                  ],\n                                  [-5.272732079029083,\n                                      42.81137220349083\n                                  ],\n                                  [-5.273512601852417,\n                                      42.81137220349083\n                                  ]\n                              ]\n                          ]\n                      }\n                  }],\n                  \"crs\": {},\n                  \"type\": \"FeatureCollection\"\n              },\n              \"hash\": \"ca38fa80a4ffa9ac6217a7e0bf71e6df\",\n              \"provider\": {},\n              \"areaHa\": 0.3057556230214663\n          }\n      }\n  }\n```\n* Saving with provider\n```json\n{\n  \"data\": {\n      \"type\": \"geoStore\",\n      \"id\": \"f3ec85259a83c61ac1b7ff8a51d0a461\",\n      \"attributes\": {\n          \"geojson\": {\n              \"features\": [{\n                  \"type\": \"Feature\",\n                  \"geometry\": {\n                      \"type\": \"MultiPolygon\",\n                      \"coordinates\": [\n                          [\n                              [\n                                  [-54.3664801812558, -10.9954102656944],\n                                  [-54.4224805595865, -10.995410177512],\n                                  [-54.4224803350077, -10.8554094476871],\n                                  [-54.4134802740762, -10.8554094618029],\n                                  [-54.4134802659914, -10.8504094360184],\n                                  [-54.3664799476939, -10.8504095083633],\n                                  [-54.3664799503888, -10.8514095138597],\n                                  [-54.3664801812558, -10.9954102656944]\n                              ]\n                          ]\n                      ]\n                  }\n              }],\n              \"crs\": {},\n              \"type\": \"FeatureCollection\"\n          },\n          \"hash\": \"f3ec85259a83c61ac1b7ff8a51d0a461\",\n          \"provider\": {\n              \"filter\": \"cartodb_id=729417\",\n              \"user\": \"wri-01\",\n              \"table\": \"x\",\n              \"type\": \"carto\"\n          },\n          \"areaHa\": 9764.29591966568\n      }\n  }\n}\n```\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "tags": [
          "GEOSTORE"
        ],
        "operationId": "createGeoStore",
        "parameters": [
          {
            "name": "geoStore",
            "in": "body",
            "description": "##### Body examples\n* Geojson:\n  ```json\n  {\n      \"geojson\": {\n          \"type\": \"FeatureCollection\",\n          \"features\": [{\n              \"type\": \"Feature\",\n              \"properties\": {},\n              \"geometry\": {\n                  \"type\": \"Polygon\",\n                  \"coordinates\": [\n                      [\n                          [-5.273512601852417, 42.81137220349083],\n                          [-5.273512601852417, 42.811803118457306],\n                          [-5.272732079029083, 42.811803118457306],\n                          [-5.272732079029083, 42.81137220349083],\n                          [-5.273512601852417, 42.81137220349083]\n                      ]\n                  ]\n              }\n          }]\n      }\n  }\n  ```\n* Provider:\n  ```json\n    {\n      \"provider\": {\n          \"filter\": \"cartodb_id=729417\",\n          \"user\": \"wri-01\",\n          \"table\": \"x\",\n          \"type\": \"carto\"\n      }\n    }\n  ```\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeoStoreBodyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The object created",
            "schema": {
              "$ref": "#/definitions/GeoStoreAPI"
            }
          },
          "400": {
            "description": "Validate error.\n* ProviderNotFound-> If the provider is distinct to 'carto', the api return this error\n* GeoJSONNotFound -> If the microservice try to obtain the geojson in the provider and the provider return empty response, the microservice return this error.\n",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Errors": {
      "type": "object",
      "description": "Errors",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "A unique identifier for this particular occurrence of the problem."
        },
        "links": {
          "type": "object",
          "description": "A links object",
          "properties": {
            "about": {
              "type": "string",
              "description": "A link that leads to further details about this particular occurrence of the problem."
            }
          }
        },
        "status": {
          "type": "string",
          "description": "The HTTP status code applicable to this problem, expressed as a string value"
        },
        "code": {
          "type": "string",
          "description": "An application-specific error code, expressed as a string value"
        },
        "title": {
          "type": "string",
          "description": "A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization."
        },
        "detail": {
          "type": "string",
          "description": "A human-readable explanation specific to this occurrence of the problem. Like title, this field's value can be localized"
        },
        "source": {
          "type": "object",
          "description": "An object containing references to the source of the error, optionally including any of the following members",
          "properties": {
            "pointer": {
              "type": "string",
              "description": "A JSON Pointer [RFC6901] to the associated entity in the request document"
            },
            "parameter": {
              "type": "string",
              "description": "A string indicating which URI query parameter caused the error."
            }
          }
        },
        "meta": {
          "type": "object",
          "description": "A meta object containing non-standard meta-information about the error."
        }
      }
    },
    "GeoStoreBodyRequest": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "object",
          "description": "Data where obtain geojson",
          "properties": {
            "type": {
              "type": "string",
              "description": "type of provider (posibilities-> carto)"
            },
            "table": {
              "type": "string",
              "description": "table name"
            },
            "user": {
              "type": "string",
              "description": "owner of table"
            },
            "filter": {
              "type": "string",
              "description": "filter to obtain the geostore"
            }
          }
        },
        "geojson": {
          "properties": {
            "schema": {
              "$ref": "#/definitions/Features"
            }
          }
        }
      }
    },
    "GeoStoreAPI": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoStore"
          }
        }
      }
    },
    "GeoStore": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Resource type"
        },
        "id": {
          "type": "string",
          "description": "Resource id"
        },
        "attributes": {
          "properties": {
            "schema": {
              "$ref": "#/definitions/GeoStoreBodyResponse"
            }
          }
        }
      }
    },
    "GeoStoreBodyResponse": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Resource type"
        },
        "areaHa": {
          "type": "string",
          "description": "Area in"
        },
        "provider": {
          "type": "object",
          "description": "Data where obtain geojson",
          "properties": {
            "type": {
              "type": "string",
              "description": "type of provider (posibilities-> carto)"
            },
            "table": {
              "type": "string",
              "description": "table name"
            },
            "user": {
              "type": "string",
              "description": "owner of table"
            },
            "filter": {
              "type": "string",
              "description": "filter to obtain the geostore"
            }
          }
        },
        "geojson": {
          "properties": {
            "schema": {
              "$ref": "#/definitions/Features"
            }
          }
        }
      }
    },
    "Features": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of feature"
        },
        "features": {
          "type": "array",
          "description": "Features",
          "items": {
            "$ref": "#/definitions/Feature"
          }
        }
      }
    },
    "Feature": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of feature"
        },
        "properties": {
          "type": "object",
          "description": "Feature"
        },
        "geometry": {
          "type": "object",
          "description": "Geometries",
          "properties": {
            "schema": {
              "$ref": "#/definitions/Geometry"
            }
          }
        }
      }
    },
    "Geometry": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Geometry type"
        },
        "coordinates": {
          "type": "array",
          "description": "Coordinates array",
          "items": {
            "type": "object"
          }
        }
      }
    }
  }
}
